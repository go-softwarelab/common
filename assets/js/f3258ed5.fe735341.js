"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[997],{2743:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"seq/README","title":"seq","description":"Append","source":"@site/docs/seq/README.md","sourceDirName":"seq","slug":"/seq/","permalink":"/common/docs/seq/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"optional","permalink":"/common/docs/optional/"},"next":{"title":"seq2","permalink":"/common/docs/seq2/"}}');var c=s(4848),i=s(8453);const l={},r="seq",a={},o=[{value:"Append",id:"append",level:2},{value:"Chunk",id:"chunk",level:2},{value:"Collect",id:"collect",level:2},{value:"Concat",id:"concat",level:2},{value:"Contains",id:"contains",level:2},{value:"ContainsAll",id:"containsall",level:2},{value:"Count",id:"count",level:2},{value:"Cycle",id:"cycle",level:2},{value:"Distinct",id:"distinct",level:2},{value:"Each",id:"each",level:2},{value:"Every",id:"every",level:2},{value:"Exists",id:"exists",level:2},{value:"Filter",id:"filter",level:2},{value:"Find",id:"find",level:2},{value:"FindAll",id:"findall",level:2},{value:"FindLast",id:"findlast",level:2},{value:"FlatMap",id:"flatmap",level:2},{value:"Flatten",id:"flatten",level:2},{value:"Flush",id:"flush",level:2},{value:"Fold",id:"fold",level:2},{value:"FoldRight",id:"foldright",level:2},{value:"ForEach",id:"foreach",level:2},{value:"FromSlice",id:"fromslice",level:2},{value:"GroupBy",id:"groupby",level:2},{value:"IsEmpty",id:"isempty",level:2},{value:"IsNotEmpty",id:"isnotempty",level:2},{value:"Limit",id:"limit",level:2},{value:"Map",id:"map",level:2},{value:"Max",id:"max",level:2},{value:"Min",id:"min",level:2},{value:"None",id:"none",level:2},{value:"NotContains",id:"notcontains",level:2},{value:"Of",id:"of",level:2},{value:"Offset",id:"offset",level:2},{value:"Partition",id:"partition",level:2},{value:"PartitionBy",id:"partitionby",level:2},{value:"Prepend",id:"prepend",level:2},{value:"Range",id:"range",level:2},{value:"RangeTo",id:"rangeto",level:2},{value:"RangeWithStep",id:"rangewithstep",level:2},{value:"Reduce",id:"reduce",level:2},{value:"ReduceRight",id:"reduceright",level:2},{value:"Repeat",id:"repeat",level:2},{value:"Reverse",id:"reverse",level:2},{value:"Select",id:"select",level:2},{value:"Skip",id:"skip",level:2},{value:"SkipUntil",id:"skipuntil",level:2},{value:"SkipWhile",id:"skipwhile",level:2},{value:"Sort",id:"sort",level:2},{value:"SortBy",id:"sortby",level:2},{value:"SortComparing",id:"sortcomparing",level:2},{value:"Take",id:"take",level:2},{value:"TakeUntil",id:"takeuntil",level:2},{value:"TakeWhile",id:"takewhile",level:2},{value:"Tap",id:"tap",level:2},{value:"Tick",id:"tick",level:2},{value:"ToSlice",id:"toslice",level:2},{value:"Union",id:"union",level:2},{value:"UnionAll",id:"unionall",level:2},{value:"Uniq",id:"uniq",level:2},{value:"UniqBy",id:"uniqby",level:2},{value:"Where",id:"where",level:2},{value:"Zip",id:"zip",level:2},{value:"type Consumer",id:"type-consumer",level:2},{value:"type Mapper",id:"type-mapper",level:2},{value:"type Predicate",id:"type-predicate",level:2},{value:"type Sequence",id:"type-sequence",level:2},{value:"AsSequence",id:"assequence",level:3},{value:"ConcatSequences",id:"concatsequences",level:3},{value:"Sequence[E].Append",id:"sequenceeappend",level:3},{value:"Sequence[E].Collect",id:"sequenceecollect",level:3},{value:"Sequence[E].Contains",id:"sequenceecontains",level:3},{value:"Sequence[E].ContainsAll",id:"sequenceecontainsall",level:3},{value:"Sequence[E].Count",id:"sequenceecount",level:3},{value:"Sequence[E].Distinct",id:"sequenceedistinct",level:3},{value:"Sequence[E].Each",id:"sequenceeeach",level:3},{value:"Sequence[E].Every",id:"sequenceeevery",level:3},{value:"Sequence[E].Exists",id:"sequenceeexists",level:3},{value:"Sequence[E].Filter",id:"sequenceefilter",level:3},{value:"Sequence[E].Find",id:"sequenceefind",level:3},{value:"Sequence[E].FindAll",id:"sequenceefindall",level:3},{value:"Sequence[E].FindLast",id:"sequenceefindlast",level:3},{value:"Sequence[E].Flush",id:"sequenceeflush",level:3},{value:"Sequence[E].Fold",id:"sequenceefold",level:3},{value:"Sequence[E].FoldRight",id:"sequenceefoldright",level:3},{value:"Sequence[E].ForEach",id:"sequenceeforeach",level:3},{value:"Sequence[E].IsEmpty",id:"sequenceeisempty",level:3},{value:"Sequence[E].IsNotEmpty",id:"sequenceeisnotempty",level:3},{value:"Sequence[E].Limit",id:"sequenceelimit",level:3},{value:"Sequence[E].None",id:"sequenceenone",level:3},{value:"Sequence[E].NotContains",id:"sequenceenotcontains",level:3},{value:"Sequence[E].Offset",id:"sequenceeoffset",level:3},{value:"Sequence[E].Partition",id:"sequenceepartition",level:3},{value:"Sequence[E].Prepend",id:"sequenceeprepend",level:3},{value:"Sequence[E].Repeat",id:"sequenceerepeat",level:3},{value:"Sequence[E].Reverse",id:"sequenceereverse",level:3},{value:"Sequence[E].Skip",id:"sequenceeskip",level:3},{value:"Sequence[E].Take",id:"sequenceetake",level:3},{value:"Sequence[E].Tap",id:"sequenceetap",level:3},{value:"Sequence[E].ToSlice",id:"sequenceetoslice",level:3},{value:"Sequence[E].Union",id:"sequenceeunion",level:3},{value:"Sequence[E].UnionAll",id:"sequenceeunionall",level:3},{value:"Sequence[E].Uniq",id:"sequenceeuniq",level:3},{value:"Sequence[E].Where",id:"sequenceewhere",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"seq",children:"seq"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'import "github.com/go-softwarelab/common/pkg/seq"\n'})}),"\n",(0,c.jsx)("a",{name:"Append"}),"\n",(0,c.jsx)(n.h2,{id:"append",children:"Append"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Append[E any](seq iter.Seq[E], elems ...E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Append appends elements to the end of a sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinitial := seq.Of(1, 2, 3)\n\n\tappended := seq.Append(initial, 4, 5, 6)\n\n\tresult := seq.Collect(appended)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Chunk"}),"\n",(0,c.jsx)(n.h2,{id:"chunk",children:"Chunk"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Chunk[E any](seq iter.Seq[E], size int) iter.Seq[iter.Seq[E]]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Chunk splits the sequence into chunks of the given size."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5, 6)\n\n\tchunks := seq.Chunk(input, 3)\n\n\tresult := seq.Collect(chunks)\n\n\tfor _, chunk := range result {\n\t\tfmt.Println(seq.Collect(chunk))\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n[4 5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Collect"}),"\n",(0,c.jsx)(n.h2,{id:"collect",children:"Collect"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Collect[E any](seq iter.Seq[E]) []E\n"})}),"\n",(0,c.jsx)(n.p,{children:"Collect collects the elements of the given sequence into a slice."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Of(1, 2, 3)\n\n\tresult := seq.Collect(sequence)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Concat"}),"\n",(0,c.jsx)(n.h2,{id:"concat",children:"Concat"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Concat[E any](sequences ...iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Concat concatenates multiple sequences into a single sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.Of(1, 2, 3)\n\tseq2 := seq.Of(4, 5, 6)\n\n\tconcatenated := seq.Concat(seq1, seq2)\n\n\tresult := seq.Collect(concatenated)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Contains"}),"\n",(0,c.jsx)(n.h2,{id:"contains",children:"Contains"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Contains[E comparable](seq iter.Seq[E], elem E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Contains returns true if the element is in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tcontains := seq.Contains(input, 3)\n\n\tfmt.Println(contains)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"ContainsAll"}),"\n",(0,c.jsx)(n.h2,{id:"containsall",children:"ContainsAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func ContainsAll[E comparable](seq iter.Seq[E], elements ...E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"ContainsAll returns true if all elements are in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tcontainsAll := seq.ContainsAll(input, 2, 3)\n\n\tfmt.Println(containsAll)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Count"}),"\n",(0,c.jsx)(n.h2,{id:"count",children:"Count"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Count[E any](seq iter.Seq[E]) int\n"})}),"\n",(0,c.jsx)(n.p,{children:"Count returns the number of elements in the sequence."}),"\n",(0,c.jsx)("a",{name:"Cycle"}),"\n",(0,c.jsx)(n.h2,{id:"cycle",children:"Cycle"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Cycle[E any](seq iter.Seq[E], count int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Cycle repeats the sequence count times."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3)\n\n\tcycled := seq.Cycle(input, 2)\n\n\tresult := seq.Collect(cycled)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Distinct"}),"\n",(0,c.jsx)(n.h2,{id:"distinct",children:"Distinct"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Distinct[E comparable](seq iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Distinct returns a sequence with only unique elements. SQL-like alias for Uniq"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 2, 3, 3, 3)\n\n\tdistinct := seq.Distinct(input)\n\n\tresult := seq.Collect(distinct)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Each"}),"\n",(0,c.jsx)(n.h2,{id:"each",children:"Each"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Each[E any](seq iter.Seq[E], consumer Consumer[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Each is an alias for Tap."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Each(seq.Of(1, 2, 3), func(v int) {\n\t\tfmt.Println(v)\n\t})\n\n\tseq.Flush(sequence)\n\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Every"}),"\n",(0,c.jsx)(n.h2,{id:"every",children:"Every"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Every[E any](seq iter.Seq[E], predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Every returns true if all elements satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(2, 4, 6, 8)\n\n\tevery := seq.Every(input, func(v int) bool { return v%2 == 0 })\n\n\tfmt.Println(every)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Exists"}),"\n",(0,c.jsx)(n.h2,{id:"exists",children:"Exists"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Exists[E any](seq iter.Seq[E], predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Exists returns true if there is at least one element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\texists := seq.Exists(input, func(v int) bool { return v > 4 })\n\n\tfmt.Println(exists)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Filter"}),"\n",(0,c.jsx)(n.h2,{id:"filter",children:"Filter"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Filter[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Filter returns a new sequence that contains only the elements that satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tfiltered := seq.Filter(input, func(v int) bool {\n\t\treturn v%2 == 0\n\t})\n\n\tresult := seq.Collect(filtered)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[2 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Find"}),"\n",(0,c.jsx)(n.h2,{id:"find",children:"Find"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Find[E any](seq iter.Seq[E], predicate Predicate[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Find returns the first element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tfound := seq.Find(input, func(v int) bool { return v > 3 })\n\n\tfmt.Println(found.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"4\n"})})]}),"\n",(0,c.jsx)("a",{name:"FindAll"}),"\n",(0,c.jsx)(n.h2,{id:"findall",children:"FindAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func FindAll[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FindAll returns all elements that satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tfound := seq.FindAll(input, func(v int) bool { return v > 3 })\n\n\tresult := seq.Collect(found)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"FindLast"}),"\n",(0,c.jsx)(n.h2,{id:"findlast",children:"FindLast"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func FindLast[E any](seq iter.Seq[E], predicate Predicate[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FindLast returns the last element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tfound := seq.FindLast(input, func(v int) bool { return v > 3 })\n\n\tfmt.Println(found.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"5\n"})})]}),"\n",(0,c.jsx)("a",{name:"FlatMap"}),"\n",(0,c.jsx)(n.h2,{id:"flatmap",children:"FlatMap"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func FlatMap[E any, R any](seq iter.Seq[E], mapper Mapper[E, iter.Seq[R]]) iter.Seq[R]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FlatMap applies a mapper function to each element of the sequence and flattens the result."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"iter"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(0, 3)\n\n\tflatMapped := seq.FlatMap(input, func(it int) iter.Seq[int] {\n\t\treturn seq.Of[int](1+it, 2+it, 3+it)\n\t})\n\n\tresult := seq.Collect(flatMapped)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Flatten"}),"\n",(0,c.jsx)(n.h2,{id:"flatten",children:"Flatten"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Flatten[Seq iter.Seq[iter.Seq[E]], E any](seq Seq) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Flatten flattens a sequence of sequences."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(seq.Of(1, 2), seq.Of(3, 4))\n\n\tflattened := seq.Flatten(input)\n\n\tresult := seq.Collect(flattened)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Flush"}),"\n",(0,c.jsx)(n.h2,{id:"flush",children:"Flush"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Flush[E any](seq iter.Seq[E])\n"})}),"\n",(0,c.jsx)(n.p,{children:"Flush consumes all elements of the input sequence."}),"\n",(0,c.jsx)("a",{name:"Fold"}),"\n",(0,c.jsx)(n.h2,{id:"fold",children:"Fold"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Fold[E any](seq iter.Seq[E], accumulator func(agg E, item E) E) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Fold applies a function against an accumulator and each element in the sequence (from left to right) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of("a", "b", "c")\n\n\tsum := seq.Fold(input, func(agg, item string) string {\n\t\treturn agg + item\n\t})\n\n\tfmt.Println(sum.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"abc\n"})})]}),"\n",(0,c.jsx)("a",{name:"FoldRight"}),"\n",(0,c.jsx)(n.h2,{id:"foldright",children:"FoldRight"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func FoldRight[E any](seq iter.Seq[E], accumulator func(agg E, item E) E) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FoldRight applies a function against an accumulator and each element in the sequence (from right to left) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of("a", "b", "c")\n\n\tsum := seq.FoldRight(input, func(agg, item string) string {\n\t\treturn agg + item\n\t})\n\n\tfmt.Println(sum.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"cba\n"})})]}),"\n",(0,c.jsx)("a",{name:"ForEach"}),"\n",(0,c.jsx)(n.h2,{id:"foreach",children:"ForEach"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func ForEach[E any](seq iter.Seq[E], consumer Consumer[E])\n"})}),"\n",(0,c.jsx)(n.p,{children:"ForEach applies consumer to each element of the input sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq.ForEach(seq.Of(1, 2, 3), func(v int) {\n\t\tfmt.Println(v)\n\t})\n\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"FromSlice"}),"\n",(0,c.jsx)(n.h2,{id:"fromslice",children:"FromSlice"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func FromSlice[Slice ~[]E, E any](slice Slice) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FromSlice creates a new sequence from the given slice."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tslice := []int{1, 2, 3}\n\n\tsequence := seq.FromSlice(slice)\n\n\tresult := seq.Collect(sequence)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"GroupBy"}),"\n",(0,c.jsx)(n.h2,{id:"groupby",children:"GroupBy"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func GroupBy[E any, K comparable](seq iter.Seq[E], by Mapper[E, K]) iter.Seq2[K, iter.Seq[E]]\n"})}),"\n",(0,c.jsx)(n.p,{children:"GroupBy groups the sequence by the given key."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5, 6)\n\n\tgroups := seq.GroupBy(input, func(v int) int {\n\t\treturn v % 2\n\t})\n\n\tfor k, v := range groups {\n\t\tfmt.Printf("%d: %v\\n", k, seq.Collect(v))\n\t}\n\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1: [1 3 5]\n0: [2 4 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"IsEmpty"}),"\n",(0,c.jsx)(n.h2,{id:"isempty",children:"IsEmpty"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func IsEmpty[E any](seq iter.Seq[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"IsEmpty returns true if the sequence is empty."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3)\n\n\tfmt.Println(seq.IsEmpty(input))\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"false\n"})})]}),"\n",(0,c.jsx)("a",{name:"IsNotEmpty"}),"\n",(0,c.jsx)(n.h2,{id:"isnotempty",children:"IsNotEmpty"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func IsNotEmpty[E any](seq iter.Seq[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"IsNotEmpty returns true if the sequence is not empty."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3)\n\n\tisNotEmpty := seq.IsNotEmpty(input)\n\n\tfmt.Println(isNotEmpty)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Limit"}),"\n",(0,c.jsx)(n.h2,{id:"limit",children:"Limit"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Limit[E any](seq iter.Seq[E], n int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Limit returns a new sequence that contains only the first n elements of the given sequence. SQL-like alias for Take"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tlimited := seq.Limit(input, 2)\n\n\tresult := seq.Collect(limited)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Map"}),"\n",(0,c.jsx)(n.h2,{id:"map",children:"Map"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Map[E any, R any](seq iter.Seq[E], mapper Mapper[E, R]) iter.Seq[R]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Map applies a mapper function to each element of the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3)\n\n\tmapped := seq.Map(input, func(v int) string {\n\t\treturn fmt.Sprintf("Number_%d", v)\n\t})\n\n\tresult := seq.Collect(mapped)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[Number_1 Number_2 Number_3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Max"}),"\n",(0,c.jsx)(n.h2,{id:"max",children:"Max"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Max[E types.Ordered](seq iter.Seq[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Max returns the maximum element in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(2, 3, 1, 5, 4)\n\n\tmaxVal := seq.Max(input)\n\n\tfmt.Println(maxVal.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"5\n"})})]}),"\n",(0,c.jsx)("a",{name:"Min"}),"\n",(0,c.jsx)(n.h2,{id:"min",children:"Min"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Min[E types.Ordered](seq iter.Seq[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Min returns the minimum element in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(2, 3, 1, 5, 4)\n\n\tmaxVal := seq.Min(input)\n\n\tfmt.Println(maxVal.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n"})})]}),"\n",(0,c.jsx)("a",{name:"None"}),"\n",(0,c.jsx)(n.h2,{id:"none",children:"None"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func None[E any](seq iter.Seq[E], predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"None returns true if no element satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tnone := seq.None(input, func(v int) bool { return v > 5 })\n\n\tfmt.Println(none)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"NotContains"}),"\n",(0,c.jsx)(n.h2,{id:"notcontains",children:"NotContains"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func NotContains[E comparable](seq iter.Seq[E], elem E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"NotContains returns true if the element is not in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tcontains := seq.NotContains(input, 3)\n\n\tfmt.Println(contains)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"false\n"})})]}),"\n",(0,c.jsx)("a",{name:"Of"}),"\n",(0,c.jsx)(n.h2,{id:"of",children:"Of"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Of[E any](elems ...E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Of creates a new sequence from the given elements."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Of(1, 2, 3)\n\n\tresult := seq.Collect(sequence)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Offset"}),"\n",(0,c.jsx)(n.h2,{id:"offset",children:"Offset"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Offset[E any](seq iter.Seq[E], n int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Offset returns a new sequence that skips the first n elements of the given sequence. SQL-like alias for Skip"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tskipped := seq.Offset(input, 2)\n\n\tresult := seq.Collect(skipped)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Partition"}),"\n",(0,c.jsx)(n.h2,{id:"partition",children:"Partition"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Partition[E any](seq iter.Seq[E], size int) iter.Seq[iter.Seq[E]]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Partition splits the sequence into chunks of the given size."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5, 6)\n\n\tpartitions := seq.Partition(input, 2)\n\n\tresult := seq.Collect(partitions)\n\n\tfor _, partition := range result {\n\t\tfmt.Println(seq.Collect(partition))\n\t}\n\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2]\n[3 4]\n[5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"PartitionBy"}),"\n",(0,c.jsx)(n.h2,{id:"partitionby",children:"PartitionBy"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func PartitionBy[E any, K comparable](seq iter.Seq[E], by Mapper[E, K]) iter.Seq[iter.Seq[E]]\n"})}),"\n",(0,c.jsx)(n.p,{children:"PartitionBy splits the sequence into chunks based on the given key."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"iter"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5, 6)\n\n\tpartitions := seq.PartitionBy(input, func(v int) int {\n\t\treturn v % 2\n\t})\n\n\t// Notice that the order of the partitions is not guaranteed\n\tsorted := seq.SortBy(partitions, func(p iter.Seq[int]) int {\n\t\tnext, stop := iter.Pull(p)\n\t\tdefer stop()\n\t\tv, _ := next()\n\t\treturn v\n\t})\n\n\tfor partition := range sorted {\n\t\tfmt.Println(seq.Collect(partition))\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 3 5]\n[2 4 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Prepend"}),"\n",(0,c.jsx)(n.h2,{id:"prepend",children:"Prepend"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Prepend[E any](seq iter.Seq[E], elems ...E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Prepend prepends elements to the beginning of a sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinitial := seq.Of(4, 5, 6)\n\n\tprepended := seq.Prepend(initial, 1, 2, 3)\n\n\tresult := seq.Collect(prepended)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5 6]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Range"}),"\n",(0,c.jsx)(n.h2,{id:"range",children:"Range"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Range[E types.Integer](start, end E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Range returns a sequence that yields integers from `start` to `end`."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tranged := seq.Range(0, 5)\n\n\tresult := seq.Collect(ranged)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[0 1 2 3 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"RangeTo"}),"\n",(0,c.jsx)(n.h2,{id:"rangeto",children:"RangeTo"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func RangeTo[E types.Integer](end E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"RangeTo returns a sequence that yields integers from 0 to `end`."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tranged := seq.RangeTo(5)\n\n\tresult := seq.Collect(ranged)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[0 1 2 3 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"RangeWithStep"}),"\n",(0,c.jsx)(n.h2,{id:"rangewithstep",children:"RangeWithStep"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func RangeWithStep[E types.Integer](start, end, step E) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"RangeWithStep returns a sequence that yields integers from `start` to `end` with `step`."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tranged := seq.RangeWithStep(0, 10, 2)\n\n\tresult := seq.Collect(ranged)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[0 2 4 6 8]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Reduce"}),"\n",(0,c.jsx)(n.h2,{id:"reduce",children:"Reduce"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Reduce[E any, R any](seq iter.Seq[E], accumulator func(agg R, item E) R, initial R) R\n"})}),"\n",(0,c.jsx)(n.p,{children:"Reduce applies a function against an accumulator and each element in the sequence (from left to right) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of("a", "b", "c")\n\n\tconcat := seq.Reduce(input, func(agg, item string) string {\n\t\treturn agg + item\n\t}, "")\n\n\tfmt.Println(concat)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"abc\n"})})]}),"\n",(0,c.jsx)("a",{name:"ReduceRight"}),"\n",(0,c.jsx)(n.h2,{id:"reduceright",children:"ReduceRight"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func ReduceRight[E any, R any](seq iter.Seq[E], accumulator func(agg R, item E) R, initial R) R\n"})}),"\n",(0,c.jsx)(n.p,{children:"ReduceRight applies a function against an accumulator and each element in the sequence (from right to left) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of("a", "b", "c")\n\n\tconcat := seq.ReduceRight(input, func(agg, item string) string {\n\t\treturn agg + item\n\t}, "")\n\n\tfmt.Println(concat)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"cba\n"})})]}),"\n",(0,c.jsx)("a",{name:"Repeat"}),"\n",(0,c.jsx)(n.h2,{id:"repeat",children:"Repeat"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Repeat[E any](elem E, count int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Repeat returns a sequence that yields the same element `count` times."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\trepeated := seq.Repeat("hello", 3)\n\n\tresult := seq.Collect(repeated)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[hello hello hello]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Reverse"}),"\n",(0,c.jsx)(n.h2,{id:"reverse",children:"Reverse"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Reverse[E any](seq iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Reverse creates a new sequence that iterates over the elements of the given sequence in reverse order."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Of(1, 2, 3)\n\n\treversed := seq.Reverse(sequence)\n\n\tresult := seq.Collect(reversed)\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 2 1]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Select"}),"\n",(0,c.jsx)(n.h2,{id:"select",children:"Select"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Select[E any, R any](seq iter.Seq[E], mapper Mapper[E, R]) iter.Seq[R]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Select applies a mapper function to each element of the sequence. SQL-like alias for Map"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3)\n\n\tmapped := seq.Select(input, func(v int) string {\n\t\treturn fmt.Sprintf("Number_%d", v)\n\t})\n\n\tresult := seq.Collect(mapped)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[Number_1 Number_2 Number_3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Skip"}),"\n",(0,c.jsx)(n.h2,{id:"skip",children:"Skip"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Skip[E any](seq iter.Seq[E], n int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Skip returns a new sequence that skips the first n elements of the given sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tskipped := seq.Skip(input, 2)\n\n\tresult := seq.Collect(skipped)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"SkipUntil"}),"\n",(0,c.jsx)(n.h2,{id:"skipuntil",children:"SkipUntil"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func SkipUntil[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"SkipUntil returns a new sequence that skips elements until the predicate is true."}),"\n",(0,c.jsx)("a",{name:"SkipWhile"}),"\n",(0,c.jsx)(n.h2,{id:"skipwhile",children:"SkipWhile"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func SkipWhile[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"SkipWhile returns a new sequence that skips elements while the predicate is true."}),"\n",(0,c.jsx)("a",{name:"Sort"}),"\n",(0,c.jsx)(n.h2,{id:"sort",children:"Sort"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Sort[E types.Ordered](seq iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Sort sorts the elements of a sequence in ascending order."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5)\n\n\tsorted := seq.Sort(input)\n\n\tresult := seq.Collect(sorted)\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 1 2 3 3 4 5 5 5 6 9]\n"})})]}),"\n",(0,c.jsx)("a",{name:"SortBy"}),"\n",(0,c.jsx)(n.h2,{id:"sortby",children:"SortBy"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func SortBy[E any, K types.Ordered](seq iter.Seq[E], keyFn Mapper[E, K]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"SortBy sorts the elements of a sequence in ascending order by the key returned by keyFn."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\ttype Person struct {\n\t\tName string\n\t\tAge  int\n\t}\n\tinput := seq.Of(\n\t\tPerson{"Alice", 30},\n\t\tPerson{"Bob", 25},\n\t\tPerson{"Charlie", 35},\n\t)\n\n\tsorted := seq.SortBy(input, func(p Person) int {\n\t\treturn p.Age\n\t})\n\n\tfor p := range sorted {\n\t\tfmt.Printf("%s (%d)\\n", p.Name, p.Age)\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Bob (25)\nAlice (30)\nCharlie (35)\n"})})]}),"\n",(0,c.jsx)("a",{name:"SortComparing"}),"\n",(0,c.jsx)(n.h2,{id:"sortcomparing",children:"SortComparing"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func SortComparing[E any](seq iter.Seq[E], cmp func(a, b E) int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"SortComparing sorts the elements of a sequence in ascending order using the cmp function."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\ttype Person struct {\n\t\tName string\n\t\tAge  int\n\t}\n\tinput := seq.Of(\n\t\tPerson{"Alice", 30},\n\t\tPerson{"Bob", 25},\n\t\tPerson{"Charlie", 35},\n\t)\n\n\tsorted := seq.SortComparing(input, func(a, b Person) int {\n\t\treturn a.Age - b.Age\n\t})\n\n\tfor p := range sorted {\n\t\tfmt.Printf("%s (%d)\\n", p.Name, p.Age)\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Bob (25)\nAlice (30)\nCharlie (35)\n"})})]}),"\n",(0,c.jsx)("a",{name:"Take"}),"\n",(0,c.jsx)(n.h2,{id:"take",children:"Take"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Take[E any](seq iter.Seq[E], n int) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Take returns a new sequence that contains only the first n elements of the given sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\ttaken := seq.Take(input, 3)\n\n\tresult := seq.Collect(taken)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"TakeUntil"}),"\n",(0,c.jsx)(n.h2,{id:"takeuntil",children:"TakeUntil"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func TakeUntil[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"TakeUntil returns a new sequence that contains elements until the predicate is true."}),"\n",(0,c.jsx)("a",{name:"TakeWhile"}),"\n",(0,c.jsx)(n.h2,{id:"takewhile",children:"TakeWhile"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func TakeWhile[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"TakeWhile returns a new sequence that contains elements while the predicate is true."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 2, 1)\n\n\ttaken := seq.TakeWhile(input, func(v int) bool {\n\t\treturn v < 3\n\t})\n\n\tresult := seq.Collect(taken)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Tap"}),"\n",(0,c.jsx)(n.h2,{id:"tap",children:"Tap"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Tap[E any](seq iter.Seq[E], consumer func(E)) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Tap returns a sequence that applies the given consumer to each element of the input sequence and pass it further."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Tap(seq.Of(1, 2, 3), func(v int) {\n\t\tfmt.Println(v)\n\t})\n\n\tseq.Flush(sequence)\n\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Tick"}),"\n",(0,c.jsx)(n.h2,{id:"tick",children:"Tick"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Tick(d time.Duration) iter.Seq[time.Time]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Tick returns a sequence that yields the current time every duration."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"time"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tticker := seq.Tick(1 * time.Millisecond)\n\n\tticker = seq.Take(ticker, 5)\n\n\tticker = seq.Tap(ticker, func(v time.Time) {\n\t\tfmt.Println(v.Format("15:04:05.000"))\n\t})\n\n\tseq.Flush(ticker)\n\n\t// Example Output:\n\t// 00:00:00.000\n\t// 00:00:00.001\n\t// 00:00:00.002\n\t// 00:00:00.003\n\t// 00:00:00.004\n}\n'})})]}),"\n",(0,c.jsx)("a",{name:"ToSlice"}),"\n",(0,c.jsx)(n.h2,{id:"toslice",children:"ToSlice"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func ToSlice[Slice ~[]E, E any](seq iter.Seq[E], slice Slice) Slice\n"})}),"\n",(0,c.jsx)(n.p,{children:"ToSlice collects the elements of the given sequence into a slice."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.Of(1, 2, 3)\n\n\tslice := make([]int, 0, 3)\n\tresult := seq.ToSlice(sequence, slice)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Union"}),"\n",(0,c.jsx)(n.h2,{id:"union",children:"Union"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Union[E types.Comparable](seq1 iter.Seq[E], seq2 iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Union returns a sequence that contains all distinct elements from both input sequences."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.Of(1, 2, 3)\n\tseq2 := seq.Of(3, 4, 5)\n\n\tunion := seq.Union(seq1, seq2)\n\n\tresult := seq.Collect(union)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"UnionAll"}),"\n",(0,c.jsx)(n.h2,{id:"unionall",children:"UnionAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func UnionAll[E any](seq1 iter.Seq[E], seq2 iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"UnionAll returns a sequence that contains all elements from both input sequences."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.Of(1, 2, 3)\n\tseq2 := seq.Of(3, 4, 5)\n\n\tunionAll := seq.UnionAll(seq1, seq2)\n\n\tresult := seq.Collect(unionAll)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Uniq"}),"\n",(0,c.jsx)(n.h2,{id:"uniq",children:"Uniq"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Uniq[E comparable](seq iter.Seq[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Uniq returns a sequence with only unique elements."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 2, 3, 3, 3)\n\n\tunique := seq.Uniq(input)\n\n\tresult := seq.Collect(unique)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"UniqBy"}),"\n",(0,c.jsx)(n.h2,{id:"uniqby",children:"UniqBy"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func UniqBy[E any, K comparable](seq iter.Seq[E], mapper Mapper[E, K]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"UniqBy returns a sequence with only unique elements based on a key."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of("apple", "banana", "apricot", "blueberry")\n\n\tuniqueBy := seq.UniqBy(input, func(v string) string {\n\t\treturn v[:1] // unique by first letter\n\t})\n\n\tresult := seq.Collect(uniqueBy)\n\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[apple banana]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Where"}),"\n",(0,c.jsx)(n.h2,{id:"where",children:"Where"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Where[E any](seq iter.Seq[E], predicate Predicate[E]) iter.Seq[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Where returns a new sequence that contains only the elements that satisfy the predicate. SQL-like alias for Filter"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tinput := seq.Of(1, 2, 3, 4, 5)\n\n\tfiltered := seq.Where(input, func(v int) bool {\n\t\treturn v%2 == 0\n\t})\n\n\tresult := seq.Collect(filtered)\n\n\tfmt.Printf("%v\\n", result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[2 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Zip"}),"\n",(0,c.jsx)(n.h2,{id:"zip",children:"Zip"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func Zip[E any, R any](seq1 iter.Seq[E], seq2 iter.Seq[R]) iter.Seq2[E, R]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Zip combines two sequences into a iter.Seq2."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.Of(1, 2, 3)\n\tseq2 := seq.Of("a", "b", "c")\n\n\tzipped := seq.Zip(seq1, seq2)\n\n\tfor k, v := range zipped {\n\t\tfmt.Printf("%d: %s\\n", k, v)\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1: a\n2: b\n3: c\n"})})]}),"\n",(0,c.jsx)("a",{name:"Consumer"}),"\n",(0,c.jsx)(n.h2,{id:"type-consumer",children:"type Consumer"}),"\n",(0,c.jsx)(n.p,{children:"Consumer is a function that consumes an element of a sequence."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"type Consumer[E any] = func(E)\n"})}),"\n",(0,c.jsx)("a",{name:"Mapper"}),"\n",(0,c.jsx)(n.h2,{id:"type-mapper",children:"type Mapper"}),"\n",(0,c.jsx)(n.p,{children:"Mapper is a function that maps a value of type T to a value of type R."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"type Mapper[T any, R any] = func(T) R\n"})}),"\n",(0,c.jsx)("a",{name:"Predicate"}),"\n",(0,c.jsx)(n.h2,{id:"type-predicate",children:"type Predicate"}),"\n",(0,c.jsx)(n.p,{children:"Predicate is a function that takes an element and returns a boolean."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"type Predicate[E any] = Mapper[E, bool]\n"})}),"\n",(0,c.jsx)("a",{name:"Sequence"}),"\n",(0,c.jsx)(n.h2,{id:"type-sequence",children:"type Sequence"}),"\n",(0,c.jsx)(n.p,{children:"Sequence is a monad representing a sequence of elements."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"type Sequence[E comparable] struct {\n    // contains filtered or unexported fields\n}\n"})}),"\n",(0,c.jsx)("a",{name:"AsSequence"}),"\n",(0,c.jsx)(n.h3,{id:"assequence",children:"AsSequence"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func AsSequence[E comparable](seq iter.Seq[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"AsSequence wraps an iter.Seq to provide a possibility to pipe several method calls."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tresult := sequence.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"ConcatSequences"}),"\n",(0,c.jsx)(n.h3,{id:"concatsequences",children:"ConcatSequences"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func ConcatSequences[E comparable](sequences ...Sequence[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"ConcatSequences concatenates multiple sequences into a single sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.AsSequence(seq.Of(1, 2))\n\tseq2 := seq.AsSequence(seq.Of(3, 4))\n\tconcatenated := seq.ConcatSequences(seq1, seq2)\n\tresult := concatenated.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Append"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeappend",children:"Sequence[E].Append"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Append(elems ...E) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Append appends elements to the end of a sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tappended := sequence.Append(4, 5)\n\tresult := appended.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Collect"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceecollect",children:"Sequence[E].Collect"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Collect() []E\n"})}),"\n",(0,c.jsx)(n.p,{children:"Collect collects the elements of the sequence into a slice."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tresult := sequence.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Contains"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceecontains",children:"Sequence[E].Contains"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Contains(elem E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Contains returns true if the element is in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tcontains := sequence.Contains(3)\n\tfmt.Println(contains)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].ContainsAll"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceecontainsall",children:"Sequence[E].ContainsAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) ContainsAll(elements ...E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"ContainsAll returns true if all elements are in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tcontainsAll := sequence.ContainsAll(2, 3, 4)\n\tfmt.Println(containsAll)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Count"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceecount",children:"Sequence[E].Count"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Count() int\n"})}),"\n",(0,c.jsx)(n.p,{children:"Count returns the number of elements in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tcount := sequence.Count()\n\tfmt.Println(count)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Distinct"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceedistinct",children:"Sequence[E].Distinct"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Distinct() Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Distinct returns a new sequence with only unique elements. SQL-like alias for Uniq"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 2, 3, 3, 3))\n\tdistinct := sequence.Distinct()\n\tresult := distinct.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Each"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeeach",children:"Sequence[E].Each"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Each(consumer Consumer[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Each returns a new sequence that calls the consumer for each element of the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3)).Each(func(v int) {\n\t\tfmt.Println(v)\n\t})\n\tsequence.Flush()\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Every"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeevery",children:"Sequence[E].Every"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Every(predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Every returns true if all elements satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tevery := sequence.Every(func(v int) bool {\n\t\treturn v > 0\n\t})\n\tfmt.Println(every)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Exists"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeexists",children:"Sequence[E].Exists"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Exists(predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"Exists returns true if there is at least one element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\texists := sequence.Exists(func(v int) bool {\n\t\treturn v > 3\n\t})\n\tfmt.Println(exists)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Filter"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefilter",children:"Sequence[E].Filter"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Filter(predicate Predicate[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Filter returns a new sequence with elements that satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tfiltered := sequence.Filter(func(v int) bool {\n\t\treturn v%2 == 0\n\t})\n\tresult := filtered.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[2 4]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Find"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefind",children:"Sequence[E].Find"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Find(predicate Predicate[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Find returns the first element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tfound := sequence.Find(func(v int) bool {\n\t\treturn v > 3\n\t})\n\n\tfmt.Println(found.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"4\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].FindAll"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefindall",children:"Sequence[E].FindAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) FindAll(predicate Predicate[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FindAll returns all elements that satisfy the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tfoundAll := sequence.FindAll(func(v int) bool {\n\t\treturn v > 3\n\t})\n\tresult := foundAll.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].FindLast"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefindlast",children:"Sequence[E].FindLast"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) FindLast(predicate Predicate[E]) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FindLast returns the last element that satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tfound := sequence.FindLast(func(v int) bool {\n\t\treturn v > 3\n\t})\n\n\tfmt.Println(found.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"5\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Flush"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeflush",children:"Sequence[E].Flush"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Flush()\n"})}),"\n",(0,c.jsx)(n.p,{children:"Flush consumes all elements of the input sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tsequence.Flush()\n\t// No output expected\n}\n'})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Fold"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefold",children:"Sequence[E].Fold"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Fold(accumulator func(agg E, item E) E) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Fold applies a function against an accumulator and each element in the sequence (from left to right) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tsum := sequence.Fold(func(agg, item int) int {\n\t\treturn agg + item\n\t})\n\n\tfmt.Println(sum.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"15\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].FoldRight"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceefoldright",children:"Sequence[E].FoldRight"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) FoldRight(accumulator func(agg E, item E) E) optional.Elem[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"FoldRight applies a function against an accumulator and each element in the sequence (from right to left) to reduce it to a single value."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of("a", "b", "c"))\n\tconcat := sequence.FoldRight(func(agg, item string) string {\n\t\treturn agg + item\n\t})\n\n\tfmt.Println(concat.MustGet())\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"cba\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].ForEach"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeforeach",children:"Sequence[E].ForEach"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) ForEach(consumer Consumer[E])\n"})}),"\n",(0,c.jsx)(n.p,{children:"ForEach calls the consumer for each element of the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq.AsSequence(seq.Of(1, 2, 3)).ForEach(func(v int) {\n\t\tfmt.Println(v)\n\t})\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].IsEmpty"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeisempty",children:"Sequence[E].IsEmpty"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) IsEmpty() bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"IsEmpty returns true if the sequence is empty."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of[int]())\n\tisEmpty := sequence.IsEmpty()\n\tfmt.Println(isEmpty)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].IsNotEmpty"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeisnotempty",children:"Sequence[E].IsNotEmpty"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) IsNotEmpty() bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"IsNotEmpty returns true if the sequence is not empty."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tisNotEmpty := sequence.IsNotEmpty()\n\tfmt.Println(isNotEmpty)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Limit"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceelimit",children:"Sequence[E].Limit"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Limit(n int) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Limit returns a new sequence that contains only the first n elements of the given sequence. SQL-like alias for Take"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tlimited := sequence.Limit(2)\n\tresult := limited.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].None"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceenone",children:"Sequence[E].None"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) None(predicate Predicate[E]) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"None returns true if no element satisfies the predicate."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tnone := sequence.None(func(v int) bool {\n\t\treturn v > 5\n\t})\n\tfmt.Println(none)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].NotContains"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceenotcontains",children:"Sequence[E].NotContains"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) NotContains(elem E) bool\n"})}),"\n",(0,c.jsx)(n.p,{children:"NotContains returns true if the element is not in the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tnotContains := sequence.NotContains(6)\n\tfmt.Println(notContains)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"true\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Offset"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeoffset",children:"Sequence[E].Offset"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Offset(n int) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Offset returns a new sequence that skips the first n elements of the given sequence. SQL-like alias for Skip"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\toffset := sequence.Offset(2)\n\tresult := offset.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Partition"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceepartition",children:"Sequence[E].Partition"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Partition(size int) iter.Seq[iter.Seq[E]]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Partition splits the sequence into chunks of the given size."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tpartitions := sequence.Partition(2)\n\tfor partition := range partitions {\n\t\tfmt.Println(seq.Collect(partition))\n\t}\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2]\n[3 4]\n[5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Prepend"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeprepend",children:"Sequence[E].Prepend"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Prepend(elems ...E) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Prepend prepends elements to the beginning of a sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(3, 4, 5))\n\tprepended := sequence.Prepend(1, 2)\n\tresult := prepended.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Repeat"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceerepeat",children:"Sequence[E].Repeat"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Repeat(count int) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Repeat repeats the sequence count times."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\trepeated := sequence.Repeat(2)\n\tresult := repeated.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Reverse"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceereverse",children:"Sequence[E].Reverse"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Reverse() Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Reverse returns a new sequence with elements in reverse order."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\treversed := sequence.Reverse()\n\tresult := reversed.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 2 1]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Skip"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeskip",children:"Sequence[E].Skip"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Skip(n int) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Skip returns a new sequence that skips the first n elements of the given sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tskipped := sequence.Skip(2)\n\tresult := skipped.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Take"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceetake",children:"Sequence[E].Take"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Take(n int) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Take returns a new sequence that contains only the first n elements of the given sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\ttaken := sequence.Take(3)\n\tresult := taken.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Tap"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceetap",children:"Sequence[E].Tap"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Tap(consumer func(E)) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Tap returns a new sequence that calls the consumer for each element of the sequence."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3)).Tap(func(v int) {\n\t\tfmt.Println(v)\n\t})\n\tsequence.Flush()\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"1\n2\n3\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].ToSlice"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceetoslice",children:"Sequence[E].ToSlice"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) ToSlice(slice []E) []E\n"})}),"\n",(0,c.jsx)(n.p,{children:"ToSlice collects the elements of the sequence into a given slice."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3))\n\tvar slice []int\n\tresult := sequence.ToSlice(slice)\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Union"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeunion",children:"Sequence[E].Union"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Union(other Sequence[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Union returns a new sequence that contains all distinct elements from both input sequences."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.AsSequence(seq.Of(1, 2, 3))\n\tseq2 := seq.AsSequence(seq.Of(3, 4, 5))\n\tunion := seq1.Union(seq2)\n\tresult := union.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].UnionAll"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeunionall",children:"Sequence[E].UnionAll"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) UnionAll(other Sequence[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"UnionAll returns a new sequence that contains all elements from both input sequences."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tseq1 := seq.AsSequence(seq.Of(1, 2, 3))\n\tseq2 := seq.AsSequence(seq.Of(3, 4, 5))\n\tunionAll := seq1.UnionAll(seq2)\n\tresult := unionAll.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3 3 4 5]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Uniq"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceeuniq",children:"Sequence[E].Uniq"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Uniq() Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Uniq returns a new sequence with only unique elements."}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 2, 3, 3, 3))\n\tunique := sequence.Uniq()\n\tresult := unique.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[1 2 3]\n"})})]}),"\n",(0,c.jsx)("a",{name:"Sequence[E].Where"}),"\n",(0,c.jsx)(n.h3,{id:"sequenceewhere",children:"Sequence[E].Where"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:"func (s Sequence[E]) Where(predicate Predicate[E]) Sequence[E]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Where returns a new sequence with elements that satisfy the predicate. SQL-like alias for Filter"}),"\n",(0,c.jsxs)(s,{children:[(0,c.jsx)("summary",{children:"Example"}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\n\t"github.com/go-softwarelab/common/pkg/seq"\n)\n\nfunc main() {\n\tsequence := seq.AsSequence(seq.Of(1, 2, 3, 4, 5))\n\tfiltered := sequence.Where(func(v int) bool {\n\t\treturn v%2 == 0\n\t})\n\tresult := filtered.Collect()\n\tfmt.Println(result)\n}\n'})}),(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Output"})}),(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"[2 4]\n"})})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(6540);const c={},i=t.createContext(c);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);